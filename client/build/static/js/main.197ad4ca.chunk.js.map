{"version":3,"sources":["utils/getWeb3.js","App.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","Object","asyncToGenerator","regenerator_default","a","mark","_callee","web3","_web","provider","_web2","wrap","_context","prev","next","ethereum","Web3","enable","t0","console","log","providers","HttpProvider","stop","this","App","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","accounts","networkId","deployedNetworkToken","MethaTokenInstance","deployedNetworkCrowdsale","MethaCrowdsaleInstance","sent","eth","getAccounts","net","getId","MethaToken","networks","Contract","abi","address","MethaCrowdsale","setState","Init","alert","error","_callee2","_this$state","current_period","contributor_data_per_period","wei_contribution","token_balance","wei_raised_per_period","start_time_of_next_period","wei_raised","wallets_authorized_count","_context2","state","methods","get_contributor_data_per_period","balanceOf","get_wallets_authorized_count","utils","fromWei","toString","eth_to_send","amount_to_claim","address_to_add","eth_to_claim","address_percent","address_total","get_all_periods","_callee3","_this$state2","periods","i","_context3","if_address_has_contributed_in","push","join","get_wallets_authorized_datails","_callee4","_this$state3","wallets_authorized","status","percent","total","total_claimed","_context4","wallets_authorized_addresses","wallets_authorized_to_claim","wallets_authorized_percent","wallets_authorized_total","wallets_authorized_total_claimed","onChange","e","defineProperty","target","name","value","buy","_callee5","_this$state4","_context5","send","from","toWei","claim_period","_callee6","_this$state5","period_id","_context6","claim_all","_callee7","_this$state6","_context7","claim_range","_callee8","_this$state7","claim_range_from","claim_range_to","_context8","claim_authorized_address","_callee9","_this$state8","_context9","claim_eth_authorized_address","_callee10","_this$state9","_context10","add_authorized_address","_callee11","_this$state10","_context11","delete_authorized_address","_ref12","_callee12","_this$state11","_context12","dataset","_x","apply","arguments","_this2","react_default","createElement","className","Date","toLocaleString","type","placeholder","onClick","map","item","key","data-index","data-address","style","cursor","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.197ad4ca.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:9545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, { Component } from \"react\";\nimport MethaToken from \"./contracts/MethaToken.json\";\nimport MethaCrowdsale from \"./contracts/MethaCrowdsale.json\";\nimport getWeb3 from \"./utils/getWeb3\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      web3: null,\n      accounts: null,\n      MethaTokenInstance: null,\n      MethaCrowdsaleInstance: null,\n      current_period: 0,\n      token_balance: 0,\n      wei_contribution: 0,\n      wei_raised_per_period: 0,\n      start_time_of_next_period: null,\n      eth_to_send: 0,\n      period_id: 0,\n      claim_range_from: 0,\n      claim_range_to: 0,\n      wei_raised: 0,\n      periods: [],\n      amount_to_claim: '0',\n      address_to_add: '',\n      eth_to_claim: '0.01',\n      address_percent: 1,\n      address_total: '0.01',\n      wallets_authorized_count: 0,\n      wallets_authorized: []\n    };\n  }\n\n  componentDidMount = async () => {\n    try {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n\n      const networkId = await web3.eth.net.getId();\n      \n      const deployedNetworkToken = MethaToken.networks[networkId];\n      const MethaTokenInstance = new web3.eth.Contract(MethaToken.abi, deployedNetworkToken && deployedNetworkToken.address);\n\n      const deployedNetworkCrowdsale = MethaCrowdsale.networks[networkId];\n      const MethaCrowdsaleInstance = new web3.eth.Contract(MethaCrowdsale.abi, deployedNetworkCrowdsale && deployedNetworkCrowdsale.address);\n      \n      this.setState({\n        web3,\n        accounts,\n        MethaTokenInstance,\n        MethaCrowdsaleInstance \n      }, this.Init);\n      \n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  Init = async () => {\n    const { web3, accounts, MethaTokenInstance, MethaCrowdsaleInstance } = this.state;\n\n    const current_period = await MethaCrowdsaleInstance\n            .methods\n            .current_period()\n            .call();\n\n    const contributor_data_per_period = await MethaCrowdsaleInstance\n            .methods\n            .get_contributor_data_per_period(current_period, accounts[0])\n            .call();\n\n    const wei_contribution = contributor_data_per_period[2];\n\n    const token_balance = await MethaTokenInstance\n            .methods\n            .balanceOf(accounts[0])\n            .call()\n\n    const wei_raised_per_period = await MethaCrowdsaleInstance\n            .methods\n            .wei_raised_per_period(current_period)\n            .call();\n\n    const start_time_of_next_period = await MethaCrowdsaleInstance\n            .methods\n            .start_time_of_next_period()\n            .call();\n\n    const wei_raised = await MethaCrowdsaleInstance\n            .methods\n            .wei_raised()\n            .call()\n    const wallets_authorized_count = await MethaCrowdsaleInstance\n            .methods\n            .get_wallets_authorized_count()\n            .call() \n\n    /*await MethaTokenInstance.methods.addMinter(MethaCrowdsaleInstance._address).send({from: accounts[0]});\n    const res = await MethaTokenInstance.methods.isMinter(MethaCrowdsaleInstance._address).call();\n    console.log(res);*/\n\n    this.setState({\n      current_period,\n      token_balance: web3.utils.fromWei(token_balance, 'ether'),\n      wei_contribution: web3.utils.fromWei(wei_contribution.toString(), 'ether'),\n      wei_raised_per_period: web3.utils.fromWei(wei_raised_per_period.toString(), 'ether'),\n      start_time_of_next_period,\n      eth_to_send: '0.01',\n      wei_raised : web3.utils.fromWei(wei_raised.toString(), 'ether'),\n      amount_to_claim: '0.01',\n      address_to_add: '',\n      eth_to_claim: '0.01',\n      address_percent: 1,\n      address_total: '0.01',\n      wallets_authorized_count\n    }, this.get_all_periods);\n  };\n\n  get_all_periods = async () => {\n    const { accounts, MethaCrowdsaleInstance, current_period } = this.state;\n    var periods = [];\n    for (var i=0; i<=current_period; i++) {\n      const res = await MethaCrowdsaleInstance.methods.if_address_has_contributed_in(i, accounts[0]).call();\n      if (res) {\n        const data = await MethaCrowdsaleInstance.methods.get_contributor_data_per_period(i, accounts[0]).call();\n        if (!data[3]) {\n          periods.push(i);\n        }\n      }\n    }\n    this.setState({\n      periods: periods.join(', ') \n    }, this.get_wallets_authorized_datails);\n  }\n\n  get_wallets_authorized_datails = async () => {\n    const { MethaCrowdsaleInstance, wallets_authorized_count } = this.state;\n    var wallets_authorized = [];\n    var j = 0;\n    for (var i=0; i<=wallets_authorized_count; i++) {\n      const address = await MethaCrowdsaleInstance.methods.wallets_authorized_addresses(i).call();\n      const status = await MethaCrowdsaleInstance.methods.wallets_authorized_to_claim(address).call();\n      const percent = await MethaCrowdsaleInstance.methods.wallets_authorized_percent(address).call();\n      const total = await MethaCrowdsaleInstance.methods.wallets_authorized_total(address).call();\n      const total_claimed = await MethaCrowdsaleInstance.methods.wallets_authorized_total_claimed(address).call();\n      if (status) {\n        wallets_authorized.push([address, percent, total, total_claimed, i]);\n      }\n      j = i + 1;\n      if (j == wallets_authorized_count) {\n        this.setState({\n          wallets_authorized\n        });\n      }\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name] : e.target.value });\n  }\n\n  buy = async () => {\n    const { web3, accounts, MethaCrowdsaleInstance, eth_to_send } = this.state;\n    if (eth_to_send >= 0.01) {\n      await MethaCrowdsaleInstance.methods.buy().send({from: accounts[0], value: web3.utils.toWei(eth_to_send, 'ether') });\n      this.Init();\n    }\n  }\n\n  claim_period = async () => {\n    const { accounts, MethaCrowdsaleInstance, period_id } = this.state;\n    await MethaCrowdsaleInstance.methods.claim_period(period_id).send({ from: accounts[0] });\n    this.Init();\n  }\n\n  claim_all = async () => {\n    const { accounts, MethaCrowdsaleInstance } = this.state;\n    await MethaCrowdsaleInstance.methods.claim_all().send({ from: accounts[0] });\n    this.Init();\n  }\n\n  claim_range = async () => {\n    const { accounts, MethaCrowdsaleInstance, claim_range_from, claim_range_to } = this.state;\n    await MethaCrowdsaleInstance.methods.claim_range(claim_range_from, claim_range_to).send({ from: accounts[0] });\n    this.Init();\n  }\n\n  claim_authorized_address = async () => {\n    const { web3, accounts, MethaCrowdsaleInstance, amount_to_claim } = this.state;\n    await MethaCrowdsaleInstance.methods.claim_authorized_address(web3.utils.toWei(amount_to_claim, 'ether')).send({ from: accounts[0] });\n    this.Init(); \n  }\n\n  claim_eth_authorized_address = async () => {\n    const { web3, accounts, MethaCrowdsaleInstance, eth_to_claim } = this.state;\n    await MethaCrowdsaleInstance.methods.claim_eth_authorized_address(web3.utils.toWei(eth_to_claim, 'ether')).send({ from: accounts[0] });\n    this.Init(); \n  }\n\n  add_authorized_address = async () => {\n    const { web3, accounts, MethaCrowdsaleInstance, address_to_add, address_percent, address_total } = this.state;\n    await MethaCrowdsaleInstance.methods.add_authorized_address(address_to_add, address_percent, web3.utils.toWei(address_total, 'ether'))\n    .send({ from: accounts[0] });\n    this.Init(); \n  }\n\n  delete_authorized_address = async (e) => {\n    const { accounts, MethaCrowdsaleInstance } = this.state;\n    await MethaCrowdsaleInstance.methods.delete_authorized_address(e.target.dataset[\"address\"], e.target.dataset[\"index\"])\n    .send({ from: accounts[0] });\n    this.Init(); \n  }\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contracts...</div>;\n    }\n  \n    return (\n      <div className=\"container\">\n        <br/>\n        <p>\n          ETH contribution : {this.state.wei_contribution} | \n          METHA balance : {this.state.token_balance} | \n          Current period ID : {this.state.current_period} | \n          Current ETH raised : {this.state.wei_raised_per_period} | \n          Total ETH raised : {this.state.wei_raised} |\n          Next Period : {new Date(this.state.start_time_of_next_period * 1000).toLocaleString()}\n        </p>\n        <p>\n          Periods : {this.state.periods}\n        </p>\n        <h2>Buy</h2>\n        <input \n          className=\"u-full-width\" \n          type=\"text\" \n          name=\"eth_to_send\" \n          placeholder=\"0.01 ETH\" \n          value={this.state.eth_to_send} \n          onChange={this.onChange}\n        />\n        <button className=\"u-full-width button-primary\" onClick={this.buy}>buy</button>\n        <h2>Claim per period</h2>\n        <input \n          className=\"u-full-width\" \n          type=\"text\" \n          name=\"period_id\"\n          value={this.state.period_id} \n          onChange={this.onChange}\n        />\n        <button className=\"u-full-width button-primary\" onClick={this.claim_period}>claim</button>\n        <h2>Claim All</h2>\n        <button className=\"u-full-width button-primary\" onClick={this.claim_all}>claim all</button>\n        <h2>Claim Range</h2>\n        From:\n        <input \n          className=\"u-full-width\" \n          type=\"text\" \n          name=\"claim_range_from\"\n          value={this.state.claim_range_from} \n          onChange={this.onChange}\n        />\n        To:\n        <input \n          className=\"u-full-width\" \n          type=\"text\" \n          name=\"claim_range_to\"\n          value={this.state.claim_range_to} \n          onChange={this.onChange}\n        />\n        <button className=\"u-full-width button-primary\" onClick={this.claim_range}>claim all</button>\n        <h2>Claim for Admin</h2>\n        <input \n          className=\"u-full-width\" \n          type=\"text\" \n          name=\"amount_to_claim\"\n          value={this.state.amount_to_claim} \n          onChange={this.onChange}\n        />\n        <button className=\"u-full-width button-primary\" onClick={this.claim_authorized_address}>claim</button>\n        <h2>Claim ETH for Admins</h2>\n        <input \n          className=\"u-full-width\" \n          type=\"text\" \n          name=\"eth_to_claim\"\n          value={this.state.eth_to_claim} \n          onChange={this.onChange}\n        />\n        <button className=\"u-full-width button-primary\" onClick={this.claim_eth_authorized_address}>claim</button>\n        <h2>Add authorized address</h2>\n        Address:\n        <input \n          className=\"u-full-width\" \n          type=\"text\" \n          name=\"address_to_add\"\n          value={this.state.address_to_add} \n          onChange={this.onChange}\n        />\n        Percent:\n        <input \n          className=\"u-full-width\" \n          type=\"text\" \n          name=\"address_percent\"\n          value={this.state.address_percent} \n          onChange={this.onChange}\n        />\n        Total:\n        <input \n          className=\"u-full-width\" \n          type=\"text\" \n          name=\"address_total\"\n          value={this.state.address_total} \n          onChange={this.onChange}\n        />\n        <button className=\"u-full-width button-primary\" onClick={this.add_authorized_address}>add</button>\n        <h2>Authorized Addresses</h2>\n        <table className=\"u-full-width\">\n          <thead>\n            <tr>\n              <th>Address</th>\n              <th>Percent</th>\n              <th>Total</th>\n              <th>Tatal Claimed</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.wallets_authorized.map(item => (\n            <tr key={item[0]}>\n              <td>{item[0]}</td>\n              <td>{item[1]}%</td>\n              <td>{this.state.web3.utils.fromWei(item[2], 'ether')} ETH</td>\n              <td>{this.state.web3.utils.fromWei(item[3], 'ether')} ETH</td>\n              <td><span data-index={item[4]} data-address={item[0]} style={{cursor: \"pointer\"}} onClick={this.delete_authorized_address}>delete</span></td>\n            </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}